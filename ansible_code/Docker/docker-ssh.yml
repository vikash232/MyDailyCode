- hosts: docker_host
  vars_files:
    - docker_ssh_vars.yml
  tasks:
    - name: " Creating directory "  
      file:
        state: directory
        path: "{{ dvd_dir }}"

    - name: " Mounting DVD "
      mount:
        src: "/dev/cdrom"
        path: "{{ dvd_dir }}"
        state: mounted
        fstype: iso9660

    - name: " Configuring Yum "
      yum_repository:
        baseurl: "{{ dvd_dir }}/AppStream"
        name: "dvd1"
        description: "AppStream dvd"
        gpgcheck: no

    - name: " Configuring yum "
      yum_repository:
        baseurl: "{{ dvd_dir }}/BaseOS"
        name: "dvd2"
        description: "BaseOS dvd"
        gpgcheck: no

    - name: " Configuring yum for docker "
      yum_repository:
        baseurl: "https://download.docker.com/linux/centos/7/x86_64/stable/"
        name: "docker-ce"
        description: "Docker-ce repo"
        gpgcheck: no

    - name: " Installing python "
      package:
        name: "python3"
        state: present

   
    - name: " Installing docker "
      package:
        name: "docker-ce-18.09.1-3.el7.x86_64"
        state: present

    - name: " Installing docker-py  "
      pip:
        name: "docker-py"

    - name: " Put SELinux in permissive mode"
      ansible.posix.selinux:
        policy: targeted
        state: permissive

    - name: "Disable firewall... "
      service:
        name: "firewalld"
        state: stopped

    - name: " Starting docker services "
      service:
        name: "docker"
        state: started
        enabled: yes

    - name: " Launching docker container "
      docker_container:
        name: "webos"
        image: "aditi99/centos-ssh:v1"
        state: started
        interactive: yes
        detach: yes
        tty: yes
        exposed_ports:
        -  "80"
        -  "22"
        ports: 
        - "{{ apache_port }}:80"
        - "{{ ssh_port }}:22"
      register: info
     

        
- hosts: localhost
  vars_files:
    - docker_ssh_vars.yml

  vars:
      ip : "{{ hostvars['192.168.43.159']['ansible_facts']['docker_container']['NetworkSettings']['IPAddress'] }}"
  tasks:
  - debug:
      msg: "IP of container : {{ ip }}"

  - name: "Updating inventory..."
    blockinfile:
      path: "/root/inventory.txt"
      block: |
        [docker_container]
        {{ ip  }} ansible_host=192.168.43.159 ansible_user=root ansible_ssh_pass=redhat ansible_connection=ssh ansible_port={{ ssh_port }}
      marker: ""

  - meta: refresh_inventory



- hosts: docker_container
  tasks:
  - name: "Installing package httpd"
    package:
      name: "httpd"
      state: present

  - name: "Creating webpage"
    copy:
      dest: "/var/www/html/index.html"
      content: "Welcome to my Docker Container!!"

  - name: "Starting services"
    command: "/usr/sbin/httpd"


